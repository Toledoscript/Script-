local player = game.Players.LocalPlayer

local debounce = false

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "üü£ScriptHubüü£",
	LoadingTitle = "üéñÔ∏è (not so) SKILL OBBY",
	LoadingSubtitle = "By Purble",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "SKILL OBBY Hub"
	},
	Discord = {
		Enabled = true,
		Invite = "nVzscMyQ", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
		RememberJoins = false -- Set this to false to make them join the discord every time they load it up
	},
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "ScriptHub Exploit",
		Subtitle = "Key System",
		Note = "Key In Discord Server: https://discord.gg/nVzscMyQ",
		FileName = "key on discord", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {""} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local MainTab = Window:CreateTab("üè† Home", nil) -- Title, Image
Rayfield:Notify({
	Title = "You executed the script",
	Content = "Thank you so much for using my script!",
	Duration = 5,
	Image = 13047715178,
	Actions = { -- Notification Buttons
		Ignore = {
			Name = "Okay!",
			Callback = function()
				print("The user tapped Okay!")
			end
		},
	},
})

local Button = MainTab:CreateButton({
	Name = "Infinite Jump Toggle",
	Callback = function()
		--Toggles the infinite jump between on or off on every script run
		_G.infinjump = not _G.infinjump

		if _G.infinJumpStarted == nil then
			--Ensures this only runs once to save resources
			_G.infinJumpStarted = true

			--Notifies readiness
			game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

			--The actual infinite jump
			local plr = game:GetService('Players').LocalPlayer
			local m = plr:GetMouse()
			m.KeyDown:connect(function(k)
				if _G.infinjump then
					if k:byte() == 32 then
						local humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
						humanoid:ChangeState('Jumping')
						wait()
						humanoid:ChangeState('Seated')
					end
				end
			end)
		end
	end,
})

local Slider = MainTab:CreateSlider({
	Name = "WalkSpeed Slider",
	Range = {1, 500},
	Increment = 1,
	Suffix = "Speed",
	CurrentValue = 16,
	Flag = "sliderws", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		if player.Character then player.Character.Humanoid.WalkSpeed = (Value) end
	end,
})



local Slider = MainTab:CreateSlider({
	Name = "JumpPower Slider",
	Range = {1, 500},
	Increment = 1,
	Suffix = "JumpPower",
	CurrentValue = 16,
	Flag = "sliderjp", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		if player.Character then player.Character.Humanoid.JumpPower = (Value) end
	end,
})

local OtherTab = Window:CreateTab("üé≤ Other", nil) -- Title, Image
local Toggle = OtherTab:CreateToggle({
	Name = "Immune to killblocks",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		-- Je≈õli `Value` jest true, rozpoczynamy autofarm
		for i, v in ipairs(workspace.Obby:GetDescendants()) do
			if v.Name == "Killbrick" then
				v.CanTouch = not Value
			end
		end

	end,
})
local Button = OtherTab:CreateButton({
	Name = "Instant Obby Pass",
	Callback = function()
		
		if debounce == false then
			
			debounce = true
			local checkpoints = workspace.Checkpoints:GetChildren()

			table.sort(checkpoints, function(a, b)
				return tonumber(a.Name) < tonumber(b.Name)
			end)

			for i, v in ipairs(checkpoints) do
				game.Players.LocalPlayer.Character:MoveTo(v.Position)
				wait()
			end

			debounce = false
			
		end

	end,
})

local CreditsTab = Window:CreateTab("üë§ Credits", nil) -- Title, Image
local Button = CreditsTab:CreateButton({
	Name = "Rabbid Bojo",
	Callback = function()
	end,
})
local Button = CreditsTab:CreateButton({
	Name = "agentScriptor",
	Callback = function()
	end,
})
local Button = CreditsTab:CreateButton({
	Name = "Official Banana",
	Callback = function()
	end,
})
local Button = CreditsTab:CreateButton({
	Name = "Script made by Toledo_Channels üòÅ",
	Callback = function()
	end,
})
local Button = CreditsTab:CreateButton({
	Name = "Discord: https://discord.gg/nVzscMyQ",
	Callback = function()
	end,
})
